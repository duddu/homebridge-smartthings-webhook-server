name: Publish Docker image

on:
  push:
    branches: [ main ]
  release:
    types: [ released ]
    
concurrency:
  group: publish-image

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build-and-push-image:
    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        id: qemu
        with:
          platforms: linux/arm64/v8,linux/amd64
      - name: Extract image metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.DOCKER_IMAGE }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        id: push
        with:
          context: .
          push: true
          sbom: true
          target: production
          build-args: |
            GIT_REF=${{ github.ref_name }}
            GIT_SHA=${{ github.sha }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/arm64/v8,linux/amd64
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:latest-cache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:latest-cache,mode=max
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.DOCKER_IMAGE }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      - name: Run deploy on Render workflow
        env:
          GH_TOKEN: ${{ github.token }}
          GIT_COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/dispatches \
            -f "event_type=deploy-render" \
            -F "client_payload[git_commit_msg]=$GIT_COMMIT_MSG" \
            -F "client_payload[git_revision]=${{ github.sha }}"