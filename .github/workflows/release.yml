name: Evaluate Release

on:
  push:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: semantic-release

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          check-latest: true
          cache: npm
      - name: Install dependencies
        run: |
          npm install -g npm @vercel/ncc
          npm clean-install --ignore-scripts
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GIT_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release
      - name: Run deploy on Render workflow
        if: ${{ github.event_name != 'pull_request' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          RELEASE_TAG="git describe --tags HEAD --candidates 0"
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/dispatches \
            -f "event_type=docker-main" \
            -F "client_payload[docker_revision]=$(eval "$RELEASE_TAG" || echo '${{ github.sha }}')" \
            -F "client_payload[docker_run_name]=$(eval "$RELEASE_TAG" || echo '${{ github.event.head_commit.message }}')" \
            -F "client_payload[docker_ref_name]=$(eval "$RELEASE_TAG" || echo '${{ github.ref_name }}')" \
            -F "client_payload[docker_ref_type]=$(eval "$RELEASE_TAG" && echo 'tag' || echo 'branch')"